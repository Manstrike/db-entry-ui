{"version":3,"sources":["config.js","pages/login/login.component.jsx","pages/home/menu.component.jsx","pages/home/school-list.component.jsx","pages/home/home.component.jsx","pages/admin-panel/user-table.component.jsx","pages/admin-panel/admin.component.jsx","pages/school/school.component.jsx","pages/teacher/teacher-list.component.jsx","pages/teacher/teacher.component.jsx","app.component.jsx","index.js"],"names":["config","LoginPage","props","state","login","password","_onClick","onClick","_handleClick","bind","_onLoginChanged","_onPasswordChanged","event","preventDefault","this","userCredentials","fetch","method","body","JSON","stringify","name","headers","then","response","json","result","console","log","setState","target","value","Container","component","maxWidth","CssBaseline","className","Typography","variant","noValidate","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","type","Button","color","React","Component","Menu","Link","to","SchoolList","entries","List","map","item","key","buildingsList","length","ListItem","button","ListItemText","primary","Collapse","in","timeput","unmountOnExit","disablePadding","subitem","building_name","Home","_fetchSchools","schools","communities","i","community","find","comm","city","level","history","UserTable","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","users","user","index","scope","AdminPanel","currentUser","parse","localStorage","getItem","nameInput","passwordInput","userAllowedAccess","role","handleButtonClick","_handleButtonClick","onNameChange","_onNameChange","onPassChange","_onPassChange","userCopy","newUser","status","push","School","communitiesList","street","postalCode","email","website","schoolBuildings","_fetchCommunities","school","split","_onChange","select","option","MenuItem","TeacherList","_handleTeacherClick","gender","firstName","secondName","Teacher","schoolBuilding","subject","position","teacherList","schoolId","buildingId","firstNameChanged","_firstNameChanged","secondNameChanged","_secondNameChanged","emailChanged","_emailChanged","handleTeacherAdding","_handleTeacherAdding","handleKeyDown","_handleKeyDown","teacher","document","addEventListener","queryString","location","search","building","_fetchSchoolInfo","_fetchSchoolTeachers","_setDefaultState","catch","error","emailDomain","schoolMailDomain","newEmail","emailEntity","join","toLowerCase","warn","ctrlKey","altKey","route","withRouter","App","redirect","_handleSignInButtonClicked","fetchedUser","setItem","exact","from","path","createBrowserHistory","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.52427558.chunk.js","sourcesContent":["export const config = {\r\n    API: 'https://db-entry.herokuapp.com'\r\n}","import React from 'react';\r\nimport {\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nimport { config } from '../../config';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nexport class LoginPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            login: '',\r\n            password: '',\r\n        }\r\n\r\n        this._onClick = props.onClick;\r\n\r\n        this._handleClick = this._handleClick.bind(this);\r\n        this._onLoginChanged = this._onLoginChanged.bind(this);\r\n        this._onPasswordChanged = this._onPasswordChanged.bind(this);\r\n    }\r\n\r\n    _handleClick(event) {\r\n        event.preventDefault();\r\n\r\n        if (!this.state.login || !this.state.password) return;\r\n\r\n        const userCredentials = {\r\n            login: this.state.login,\r\n            password: this.state.password,\r\n        };\r\n\r\n        fetch(`${config.API}/user/login`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                name: userCredentials.login\r\n            }),\r\n            headers: {\r\n                'Content-type' : 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then((result) => {\r\n                //TODO Add button for logout, rework this mess\r\n                console.log({result})\r\n                if (!result) return;\r\n                this._onClick(userCredentials, result);\r\n            });\r\n    }\r\n\r\n    _onLoginChanged(event) {\r\n        this.setState({\r\n            login: event.target.value\r\n        });\r\n    }\r\n\r\n    _onPasswordChanged(event) {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className='someClass'>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n                    </Typography>\r\n                    <form className='somClass' noValidate>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"login\"\r\n                            label=\"Login\"\r\n                            name=\"login\"\r\n                            autoComplete=\"login\"\r\n                            autoFocus\r\n                            onChange={this._onLoginChanged}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            onChange={this._onPasswordChanged}\r\n                        />\r\n                        <Button\r\n                            type=\"button\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className='cssdds'\r\n                            onClick={this._handleClick}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nexport class Menu extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div>\r\n                    <Button\r\n                        type=\"button\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\"navButton\"\r\n                        component={Link}\r\n                        to='/school/create'\r\n                    >\r\n                        Create School\r\n                    </Button>\r\n                    <Button\r\n                        fullWidth\r\n                        type=\"button\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className=\"navButton\"\r\n                        component={Link}\r\n                        to='/admin'\r\n                    >\r\n                        Admin Panel\r\n                    </Button>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class SchoolList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    _handleClick(event) {\r\n        this.setState({\r\n            [event] : !this.state[event],\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const entries = this.props.entries;\r\n        console.log({entries});\r\n        return (\r\n            <div className='entry-list-wrapper'>\r\n                <List>\r\n                    {entries.map((item) => {\r\n                        return (\r\n                            <div key={item.id}>\r\n                                {item.buildingsList.length > 0 \r\n                                    ? (\r\n                                        <div key={item.id}>\r\n                                            <ListItem\r\n                                                button\r\n                                                key={item.id}\r\n                                                onClick={\r\n                                                    this._handleClick.bind(this, item.name)\r\n                                                }\r\n                                            >\r\n                                                <ListItemText primary={item.name} />\r\n                                            </ListItem>\r\n\r\n                                            <Collapse\r\n                                                key={item.id}\r\n                                                component='li'\r\n                                                in={this.state[item.name]}\r\n                                                timeput='auto'\r\n                                                unmountOnExit\r\n                                            >\r\n                                                <List \r\n                                                    disablePadding\r\n                                                    className='entry-item'\r\n                                                    margin='normal'\r\n                                                >\r\n                                                    {item.buildingsList.map(subitem => {\r\n                                                        return (\r\n                                                            <ListItem\r\n                                                                button\r\n                                                                component={Link}\r\n                                                                to={`/teacher/create?building=${subitem.id}&school=${item.id}`} \r\n                                                                key={subitem.id}\r\n                                                            >\r\n                                                                <ListItemText \r\n                                                                    key={subitem.id} \r\n                                                                    primary={subitem.building_name} \r\n                                                                />\r\n                                                            </ListItem>\r\n                                                        )\r\n                                                    })}\r\n                                                </List>\r\n                                            </Collapse>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <ListItem\r\n                                            button\r\n                                            component={Link}\r\n                                            to={`/teacher/create?school=${item.id}`}\r\n                                            key={item.id}\r\n                                        >\r\n                                            <ListItemText primary={item.name}/>\r\n                                        </ListItem>\r\n                                    )}\r\n\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport './home.component.css';\r\nimport { config } from '../../config';\r\n\r\nimport { Menu } from './menu.component';\r\nimport { SchoolList } from './school-list.component';\r\n\r\n\r\nexport class Home extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            entries: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._fetchSchools();\r\n    }\r\n\r\n    _fetchSchools() {\r\n        let schools;\r\n\r\n        fetch(`${config.API}/school/all`)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                schools = result;\r\n                return fetch(`${config.API}/school/communities`)\r\n            })\r\n            .then(response => response.json())\r\n            .then(communities => {\r\n                schools = schools.map((item, i) => {\r\n                    const community = communities.find(comm => comm.id === item.community);\r\n                    return {\r\n                        ...item,\r\n                        name: `${community.name}, ${item.city} - ${item.level}`,\r\n                    };\r\n                });\r\n\r\n                this.setState({\r\n                    entries: [...schools]\r\n                });\r\n            });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { history } = this.props;\r\n        const { entries } = this.state;\r\n\r\n        return (\r\n            <div className=\"home-page\">\r\n                <SchoolList entries={entries}/>\r\n                <Menu history={history}/>\r\n            </div>  \r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport class UserTable extends React.Component {\r\n    render() {\r\n        return (\r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Username</TableCell>\r\n                    <TableCell align=\"right\">Password</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {this.props.users.map((user, index) => (\r\n                    <TableRow key={index}>\r\n                      <TableCell component=\"th\" scope=\"row\">{user.name}</TableCell>\r\n                      <TableCell align=\"right\">{user.password}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport { config } from '../../config';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { UserTable } from './user-table.component';\r\n\r\nexport class AdminPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const currentUser = JSON.parse(localStorage.getItem('user'));\r\n\r\n        this.state = {\r\n            nameInput: '',\r\n            passwordInput: '',\r\n            users: [],\r\n            userAllowedAccess: currentUser.role === 'admin',\r\n        };\r\n\r\n        this.handleButtonClick = this._handleButtonClick.bind(this);\r\n        this.onNameChange = this._onNameChange.bind(this);\r\n        this.onPassChange = this._onPassChange.bind(this);\r\n    }\r\n\r\n    _handleButtonClick(event) {\r\n        event.preventDefault();\r\n\r\n        if (this.state.nameInput === '' || this.state.passwordInput === '') return;\r\n\r\n        const userCopy = [...this.state.users];\r\n        const newUser = {\r\n            name: this.state.nameInput,\r\n            password: this.state.passwordInput,\r\n        }\r\n\r\n        fetch(`${config.API}/user/create`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(newUser),\r\n            headers: {\r\n                'Content-type' : 'application/json'\r\n            }\r\n        })\r\n        .then(response => response)\r\n        .then(result => {\r\n            console.log({result})\r\n            if (result.status === 200) {\r\n                userCopy.push(newUser);\r\n\r\n                this.setState({\r\n                    ...this.state,\r\n                    users: [...userCopy],\r\n                    nameInput: '',\r\n                    passwordInput: ''\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    _onNameChange(event) {\r\n        this.setState({\r\n            nameInput: event.target.value\r\n        });\r\n    }\r\n\r\n    _onPassChange(event) {\r\n        this.setState({\r\n            passwordInput: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { userAllowedAccess } = this.state;\r\n\r\n        if (!userAllowedAccess) return null;\r\n\r\n        return (\r\n            <Container component='main' maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                        Admin Panel\r\n                </Typography>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"login\"\r\n                    label=\"Login\"\r\n                    name=\"login\"\r\n                    autoFocus\r\n                    onChange={this.onNameChange}\r\n                    value={this.state.nameInput}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    id=\"password\"\r\n                    value={this.state.passwordInput}\r\n                    onChange={this.onPassChange}\r\n                />\r\n                <Button\r\n                    type=\"button\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.handleButtonClick}\r\n                >\r\n                    Create user\r\n                </Button>\r\n\r\n                <UserTable users={this.state.users} />\r\n            </Container>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { config } from '../../config';\r\n\r\nexport class School extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            communitiesList: [],\r\n            level: '',\r\n            community: '(ORS)',\r\n            street: '',\r\n            postalCode: '',\r\n            city: '',\r\n            email: '',\r\n            website: '',\r\n            schoolBuildings: ''\r\n        };\r\n\r\n        this.onClick = this._onClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._fetchCommunities();\r\n    }\r\n\r\n    _fetchCommunities() {\r\n        fetch(`${config.API}/school/communities`)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                this.setState({\r\n                    communitiesList: [...result]\r\n                });\r\n            });\r\n    }\r\n\r\n    _onChange(role, event) {\r\n        this.setState({\r\n            [role]: event.target.value\r\n        });\r\n    }\r\n\r\n    _onClick(event) {\r\n        event.preventDefault();\r\n\r\n        if (\r\n            this.state.level === '' ||\r\n            this.state.community === '' ||\r\n            this.state.street === '' ||\r\n            this.state.postalCode === '' ||\r\n            this.state.city === '' ||\r\n            this.state.email === ''\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        const school = {\r\n            level: this.state.level,\r\n            community: this.state.community,\r\n            street: this.state.street,\r\n            postalCode: this.state.postalCode,\r\n            city: this.state.city,\r\n            email: this.state.email,\r\n            website: this.state.website,\r\n            schoolBuildings: this.state.schoolBuildings.split(',')\r\n        }\r\n\r\n        fetch(`${config.API}/school/create`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(school),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }).then(response => {\r\n            if (response.status !== 200) return;\r\n\r\n            this.setState({\r\n                level: '',\r\n                community: '',\r\n                street: '',\r\n                postalCode: '',\r\n                city: '',\r\n                email: '',\r\n                website: '',\r\n                schoolBuildings: ''\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { communitiesList } = this.state;\r\n\r\n        return (\r\n            <Container component='main' maxWidth='xs'>\r\n                <CssBaseline />\r\n                <Typography \r\n                    component='h1'\r\n                    variant='h5'\r\n                >\r\n                    Create School\r\n                </Typography>\r\n\r\n                <TextField \r\n                    label='School Level'\r\n                    fullWidth\r\n                    required\r\n                    margin='normal'\r\n                    value={this.state.level}\r\n                    onChange={this._onChange.bind(this, 'level')}\r\n                />\r\n                <TextField \r\n                    label='Community' \r\n                    select\r\n                    fullWidth\r\n                    required\r\n                    margin='normal'\r\n                    value={this.state.community}\r\n                    onChange={this._onChange.bind(this, 'community')}\r\n                >\r\n                    {communitiesList.map((option, index) => (\r\n                        <MenuItem key={index} value={option.id}>\r\n                            {option.name}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n                <TextField \r\n                    label='Street'\r\n                    fullWidth\r\n                    required\r\n                    margin='normal'\r\n                    value={this.state.street}\r\n                    onChange={this._onChange.bind(this, 'street')}\r\n                />\r\n                <TextField \r\n                    label='Postal Code'\r\n                    fullWidth\r\n                    required\r\n                    margin='normal'\r\n                    value={this.state.postalCode}\r\n                    onChange={this._onChange.bind(this, 'postalCode')}\r\n                />\r\n                <TextField \r\n                    label='City'\r\n                    fullWidth\r\n                    required\r\n                    margin='normal'\r\n                    value={this.state.city}\r\n                    onChange={this._onChange.bind(this, 'city')}\r\n                />\r\n                <TextField \r\n                    label='Email'\r\n                    fullWidth\r\n                    required\r\n                    margin='normal'\r\n                    value={this.state.email}\r\n                    onChange={this._onChange.bind(this, 'email')}\r\n                />\r\n                <TextField \r\n                    label='Website'\r\n                    fullWidth\r\n                    margin='normal'\r\n                    value={this.state.website}\r\n                    onChange={this._onChange.bind(this, 'website')}\r\n                />\r\n                <TextField \r\n                    label='School Buildings'\r\n                    fullWidth\r\n                    margin='normal'\r\n                    value={this.state.schoolBuildings}\r\n                    onChange={this._onChange.bind(this, 'schoolBuildings')}\r\n                />\r\n                <Button \r\n                    type='submit'\r\n                    color='primary'\r\n                    variant='contained'\r\n                    margin='normal'\r\n                    onClick={this.onClick}\r\n                >\r\n                    Save\r\n                </Button>\r\n            </Container>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nexport class TeacherList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this._onClick = props.onClick;\r\n    }\r\n    \r\n    _handleTeacherClick(item) {\r\n        this._onClick(item);\r\n    }\r\n\r\n    render() {\r\n        const { entries, school } = this.props;\r\n\r\n        return (\r\n            <div className='entry-list-wrapper'> \r\n                <h2>{school ? `${school.community}, ${school.city} - ${school.level}` : ''}</h2>\r\n                <div>\r\n                    <List>\r\n                        {entries.map((item) => {\r\n                            return (\r\n                                <div key={item.id}>\r\n                                    <ListItem\r\n                                        button\r\n                                        onClick={this._handleTeacherClick.bind(this, item)}\r\n                                        key={item.id}\r\n                                    >\r\n                                        <ListItemText primary={`[${item.gender}] ${item.firstName} ${item.secondName}`}/>\r\n                                    </ListItem>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </List>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport queryString from 'query-string';\r\n\r\nimport { config } from '../../config';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { TeacherList } from './teacher-list.component';\r\n\r\nclass Teacher extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: null,\r\n            firstName: '',\r\n            secondName: '',\r\n            email: '',\r\n            gender: '',\r\n            school: null,\r\n            schoolBuilding: '',\r\n            subject: '',\r\n            position: '',\r\n            teacherList: [],\r\n            schoolId: null,\r\n            buildingId: null,\r\n        };\r\n\r\n        this.firstNameChanged = this._firstNameChanged.bind(this);\r\n        this.secondNameChanged = this._secondNameChanged.bind(this);\r\n        this.emailChanged = this._emailChanged.bind(this);\r\n        this.handleTeacherAdding = this._handleTeacherAdding.bind(this);\r\n        this.handleKeyDown = this._handleKeyDown.bind(this);\r\n    }\r\n\r\n    _handleTeacherClick(teacher) {\r\n        if (!teacher) return;\r\n\r\n        this.setState({\r\n            id: teacher.id,\r\n            firstName: teacher.firstName,\r\n            secondName: teacher.secondName,\r\n            email: teacher.email,\r\n            gender: teacher.gender,\r\n            subject: teacher.subject,\r\n            position: teacher.position\r\n        });\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.addEventListener('keydown', this._handleKeyDown.bind(this), false);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { school, building } = queryString.parse(this.props.location.search);\r\n\r\n        this.setState({\r\n            schoolId: school,\r\n            buildingId: building\r\n        });\r\n\r\n        this._fetchSchoolInfo();\r\n        this._fetchSchoolTeachers();\r\n    }\r\n    \r\n    _fetchSchoolInfo() {\r\n        const { school } = queryString.parse(this.props.location.search);\r\n\r\n        if (this.state.school) return;\r\n\r\n        fetch(`${config.API}/school/${school}`)\r\n            .then(response => response.json())\r\n            .then((result ) => {\r\n                this.setState({\r\n                    school: result\r\n                });\r\n\r\n                this._setDefaultState();\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    _setDefaultState() {\r\n        const { school } = this.state;\r\n\r\n        const [, emailDomain] = school.email.split('@');\r\n\r\n        this.setState({\r\n            schoolMailDomain: '@' + emailDomain,\r\n            email: '.@' + emailDomain\r\n        });\r\n    }\r\n\r\n    _firstNameChanged(event) {\r\n        const value = event.target.value;\r\n        const [emailEntity ,] = this.state.email.split('@');\r\n\r\n        let newEmail;\r\n        if (emailEntity) {\r\n            const [, secondName] = emailEntity.split('.');\r\n            newEmail = [value, secondName].join('.') + this.state.schoolMailDomain;\r\n        } else {\r\n            newEmail = [value, this.state.schoolMailDomain].join('.');\r\n        }\r\n\r\n        this.setState({\r\n            firstName: value,\r\n            email: newEmail.toLowerCase(),\r\n        });\r\n    }\r\n\r\n    _secondNameChanged(event) {\r\n        const value = event.target.value;\r\n        const [emailEntity,] = this.state.email.split('@');\r\n\r\n        let newEmail;\r\n        if (emailEntity) {\r\n            const [firstName, ] = emailEntity.split('.');\r\n            newEmail = [firstName, value].join('.') + this.state.schoolMailDomain;\r\n        } else {\r\n            newEmail = ['.', value, this.state.schoolMailDomain].join('')\r\n        }\r\n\r\n        this.setState({\r\n            secondName: value,\r\n            email: newEmail.toLowerCase(),\r\n        });\r\n    }\r\n\r\n    _emailChanged(event) {\r\n        this.setState({\r\n            email: event.target.value,\r\n        });\r\n    }\r\n\r\n    _handleTeacherAdding() {\r\n        if (\r\n            !this.state.firstName ||\r\n            !this.state.secondName ||\r\n            !this.state.gender\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        const teacher = {\r\n            id: this.state.id,\r\n            firstName: this.state.firstName,\r\n            secondName: this.state.secondName,\r\n            gender: this.state.gender,\r\n            position: this.state.position,\r\n            subject: this.state.subject,\r\n            email: this.state.email,\r\n            school: this.state.schoolId,\r\n            building: this.state.buildingId\r\n        };\r\n\r\n        fetch(`${config.API}/teacher/create`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(teacher),\r\n            headers: {\r\n                'Content-type' : 'application/json'\r\n            }\r\n        }).then(response => {\r\n            if (response.status !== 200) {\r\n                console.warn('Something wend wrong');\r\n                return;\r\n            }\r\n\r\n            this.setState({\r\n                id: null,\r\n                firstName: '',\r\n                secondName: '',\r\n                email: '',\r\n                gender: '',\r\n                school: '',\r\n                schoolBuilding: '',\r\n                subject: '',\r\n                position: ''\r\n            });\r\n\r\n            this._fetchSchoolTeachers();\r\n        });\r\n    }\r\n\r\n    _handleKeyDown(event) {\r\n        if (event.ctrlKey &&  event.key === 'm') {\r\n            this.setState({\r\n                gender: 'M'\r\n            });\r\n\r\n            this._handleTeacherAdding();\r\n        }\r\n        if (event.ctrlKey && event.altKey && event.key === 'f') {\r\n            this.setState({\r\n                gender: 'F'\r\n            });\r\n\r\n            this._handleTeacherAdding();\r\n        }\r\n    }\r\n\r\n    _fetchSchoolTeachers() {\r\n        const { school, building } = queryString.parse(this.props.location.search);\r\n        \r\n        const route = building \r\n            ? `${config.API}/teacher/building/${school}/${building}`\r\n            : `${config.API}/teacher/school/${school}`;\r\n        \r\n        fetch(route)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                this.setState({\r\n                    teacherList: result\r\n                });\r\n            });\r\n    }\r\n\r\n    _fetchSubjects() {\r\n        //TODO\r\n    }\r\n\r\n    _fetchFunctions() {\r\n        //TODO\r\n    }\r\n\r\n    render() {\r\n        const { teacherList, school } = this.state;\r\n\r\n        return (\r\n            <div className='home-page'>\r\n                <TeacherList onClick={this._handleTeacherClick.bind(this)} entries={teacherList} school={school}/>\r\n                <Container component='main' maxWidth='xs'>\r\n                    <CssBaseline />\r\n                    <Typography \r\n                        component='h1'\r\n                        variant='h5'\r\n                    >\r\n                        Create Teacher\r\n                    </Typography>\r\n\r\n                    <TextField \r\n                        label='First Name'\r\n                        fullWidth\r\n                        required\r\n                        margin='normal'\r\n                        value={this.state.firstName}\r\n                        onChange={this.firstNameChanged}\r\n                    />\r\n                    <TextField \r\n                        label='Second Name'\r\n                        fullWidth\r\n                        required\r\n                        margin='normal'\r\n                        value={this.state.secondName}\r\n                        onChange={this.secondNameChanged}\r\n                    />\r\n                    <TextField \r\n                        label='Email'\r\n                        fullWidth\r\n                        required\r\n                        margin='normal'\r\n                        value={this.state.email}\r\n                        onChange={this.emailChanged}\r\n                    />\r\n                    <TextField \r\n                        label='Function' \r\n                        select\r\n                        fullWidth\r\n                        margin='normal'\r\n                    >\r\n                    </TextField>\r\n                    <TextField \r\n                        label='Subject' \r\n                        select\r\n                        fullWidth\r\n                        margin='normal'\r\n                    >\r\n                    </TextField>\r\n                </Container>\r\n            </div>\r\n\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Teacher);","import React from 'react';\r\nimport './app.component.css';\r\n\r\nimport { config } from './config';\r\n\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { LoginPage } from './pages/login/login.component';\r\nimport { Home } from './pages/home/home.component';\r\nimport { AdminPanel } from './pages/admin-panel/admin.component';\r\nimport { School } from './pages/school/school.component';\r\nimport  Teacher  from './pages/teacher/teacher.component';\r\n\r\nexport class App extends React.Component{\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            redirect: false,\r\n        };\r\n\r\n        this._handleSignInButtonClicked = this._handleSignInButtonClicked.bind(this); \r\n    }\r\n\r\n    _handleSignInButtonClicked(userCredentials, fetchedUser) {\r\n        const {login, password} = userCredentials;\r\n        \r\n        localStorage.setItem('user', JSON.stringify(fetchedUser));\r\n\r\n        this.setState({\r\n            redirect: password === fetchedUser.password && login === fetchedUser.name,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { redirect } = this.state;\r\n        const { history } = this.props;\r\n\r\n        if (redirect) {\r\n            return (\r\n                <div className=\"App\">\r\n                <Switch>\r\n                    <Redirect exact from='/' to='/home' push/>\r\n                    <Route exact path='/'>\r\n                        <LoginPage history={history} location={this.props.location} onClick={this._handleSignInButtonClicked}/>\r\n                    </Route>\r\n                    <Route exact path='/home'>\r\n                        <Home history={history} />\r\n                    </Route>\r\n                    <Route exact path='/admin'>\r\n                        <AdminPanel history={history}/>\r\n                    </Route>\r\n                    <Route path='/school/create'>\r\n                        <School history={history} />\r\n                    </Route>\r\n                    <Route path='/teacher/create'>\r\n                        <Teacher history={history} />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <Switch>\r\n                    <Route exact path='/'>\r\n                        <LoginPage history={history} onClick={this._handleSignInButtonClicked}/>\r\n                    </Route>\r\n                    {redirect && <Redirect to='/home' />}\r\n                    <Route exact path='/home'>\r\n                        <Home history={history} />\r\n                    </Route>\r\n                    <Route exact path='/admin'>\r\n                        <AdminPanel history={history} />\r\n                    </Route>\r\n                    <Route path='/school/create'>\r\n                        <School history={history} />\r\n                    </Route>\r\n                    <Route path='/teacher/create'>\r\n                        <Teacher history={history} />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './app.component.jsx';\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport {createBrowserHistory} from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App history={history}/>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}